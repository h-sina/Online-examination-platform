{
  "name": "systemjs",
  "version": "6.12.1",
  "main": "dist/system-node.cjs",
  "exports": {
    ".": {
      "node": "./dist/system-node.cjs",
      "default": "./dist/system.min.js"
    },
    "./s.js": "./dist/s.min.js",
    "./package.json": "./package.json",
    "./dist/*": "./dist/*"
  },
  "description": "Dynamic ES module loader",
  "repository": {
    "type": "git",
    "url": "git://github.com/systemjs/systemjs"
  },
  "author": "Guy Bedford",
  "type": "script",
  "license": "MIT",
  "files": [
    "dist"
  ],
  "devDependencies": {
    "@jsenv/file-size-impact": "^5.2.0",
    "@rollup/plugin-json": "^4.0.2",
    "@rollup/plugin-node-resolve": "^7.1.1",
    "@rollup/plugin-replace": "^2.3.1",
    "@zeit/ncc": "^0.22.1",
    "bluebird": "^3.7.2",
    "concurrently": "^5.1.0",
    "construct-style-sheets-polyfill": "^2.3.5",
    "cross-env": "^7.0.2",
    "mkdirp": "^1.0.4",
    "mocha": "^7.1.1",
    "node-fetch": "^2.6.0",
    "open": "^7.0.3",
    "rimraf": "^3.0.2",
    "rollup": "^2.33.3",
    "rollup-plugin-terser": "^5.3.0",
    "source-map-support": "^0.5.16",
    "symbol-es6": "^0.1.2",
    "terser": "^5.5.0",
    "whatwg-fetch": "^3.0.0"
  },
  "scripts": {
    "build": "rimraf dist && mkdirp dist && concurrently -n w: 'npm:build:*'",
    "build:node": "node --experimental-modules build-node.mjs",
    "build:browser": "rollup -c",
    "build-browser-dev": "rollup -c --environment dev",
    "footprint": "concurrently -n w: 'npm:footprint:*'",
    "footprint:systemjs": "cat dist/system.min.js | gzip -9f | wc -c",
    "footprint:sjs": "cat dist/s.min.js | gzip -9f | wc -c",
    "test": "concurrently -n w: 'npm:test:*'",
    "test:internals": "cross-env NODE_OPTIONS=\"--unhandled-rejections=none\" mocha -b test/import-map.js test/system-core.js test/url-resolution.js",
    "test:node": "cross-env NODE_OPTIONS=--experimental-modules mocha --timeout 5000 -b test/system-node.js",
    "test:browser": "node test/server.cjs",
    "test-browser-watch": "cross-env WATCH_MODE=true node test/server.cjs",
    "prepublish": "npm run build"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/systemjs"
  }
}
