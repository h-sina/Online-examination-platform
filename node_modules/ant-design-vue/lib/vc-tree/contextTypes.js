"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useInjectTreeContext = exports.TreeContext = void 0;

var _vue = require("vue");

/**
 * Webpack has bug for import loop, which is not the same behavior as ES module.
 * When util.js imports the TreeNode for tree generate will cause treeContextTypes be empty.
 */
var TreeContextKey = Symbol('TreeContextKey');
var TreeContext = (0, _vue.defineComponent)({
  name: 'TreeContext',
  props: {
    value: {
      type: Object
    }
  },
  setup: function setup(props, _ref) {
    var slots = _ref.slots;
    (0, _vue.provide)(TreeContextKey, (0, _vue.computed)(function () {
      return props.value;
    }));
    return function () {
      var _a;

      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);
    };
  }
});
exports.TreeContext = TreeContext;

var useInjectTreeContext = function useInjectTreeContext() {
  return (0, _vue.inject)(TreeContextKey, (0, _vue.computed)(function () {
    return {};
  }));
};

exports.useInjectTreeContext = useInjectTreeContext;