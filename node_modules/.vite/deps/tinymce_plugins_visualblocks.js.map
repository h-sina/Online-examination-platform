{
  "version": 3,
  "sources": ["../../tinymce/plugins/visualblocks/plugin.js", "../../tinymce/plugins/visualblocks/index.js", "dep:tinymce_plugins_visualblocks"],
  "sourcesContent": ["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.3 (2022-02-09)\n */\n(function () {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      return {\n        get: get,\n        set: set\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var fireVisualBlocks = function (editor, state) {\n      editor.fire('VisualBlocks', { state: state });\n    };\n\n    var toggleVisualBlocks = function (editor, pluginUrl, enabledState) {\n      var dom = editor.dom;\n      dom.toggleClass(editor.getBody(), 'mce-visualblocks');\n      enabledState.set(!enabledState.get());\n      fireVisualBlocks(editor, enabledState.get());\n    };\n\n    var register$1 = function (editor, pluginUrl, enabledState) {\n      editor.addCommand('mceVisualBlocks', function () {\n        toggleVisualBlocks(editor, pluginUrl, enabledState);\n      });\n    };\n\n    var isEnabledByDefault = function (editor) {\n      return editor.getParam('visualblocks_default_state', false, 'boolean');\n    };\n\n    var setup = function (editor, pluginUrl, enabledState) {\n      editor.on('PreviewFormats AfterPreviewFormats', function (e) {\n        if (enabledState.get()) {\n          editor.dom.toggleClass(editor.getBody(), 'mce-visualblocks', e.type === 'afterpreviewformats');\n        }\n      });\n      editor.on('init', function () {\n        if (isEnabledByDefault(editor)) {\n          toggleVisualBlocks(editor, pluginUrl, enabledState);\n        }\n      });\n    };\n\n    var toggleActiveState = function (editor, enabledState) {\n      return function (api) {\n        api.setActive(enabledState.get());\n        var editorEventCallback = function (e) {\n          return api.setActive(e.state);\n        };\n        editor.on('VisualBlocks', editorEventCallback);\n        return function () {\n          return editor.off('VisualBlocks', editorEventCallback);\n        };\n      };\n    };\n    var register = function (editor, enabledState) {\n      var onAction = function () {\n        return editor.execCommand('mceVisualBlocks');\n      };\n      editor.ui.registry.addToggleButton('visualblocks', {\n        icon: 'visualblocks',\n        tooltip: 'Show blocks',\n        onAction: onAction,\n        onSetup: toggleActiveState(editor, enabledState)\n      });\n      editor.ui.registry.addToggleMenuItem('visualblocks', {\n        text: 'Show blocks',\n        icon: 'visualblocks',\n        onAction: onAction,\n        onSetup: toggleActiveState(editor, enabledState)\n      });\n    };\n\n    function Plugin () {\n      global.add('visualblocks', function (editor, pluginUrl) {\n        var enabledState = Cell(false);\n        register$1(editor, pluginUrl, enabledState);\n        register(editor, enabledState);\n        setup(editor, pluginUrl, enabledState);\n      });\n    }\n\n    Plugin();\n\n}());\n", "// Exports the \"visualblocks\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/visualblocks')\n//   ES2015:\n//     import 'tinymce/plugins/visualblocks'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/visualblocks/index.js\");"],
  "mappings": ";;;;;;AAAA;AAAA;AAAA;AAQA,IAAC,YAAY;AACT;AAEA,UAAI,OAAO,SAAU,SAAS;AAC5B,YAAI,QAAQ;AACZ,YAAI,MAAM,WAAY;AACpB,iBAAO;AAAA,QACT;AACA,YAAI,MAAM,SAAU,GAAG;AACrB,kBAAQ;AAAA,QACV;AACA,eAAO;AAAA,UACL;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAEA,UAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ,uBAAuB;AAE/D,UAAI,mBAAmB,SAAU,QAAQ,OAAO;AAC9C,eAAO,KAAK,gBAAgB,EAAE,MAAa,CAAC;AAAA,MAC9C;AAEA,UAAI,qBAAqB,SAAU,QAAQ,WAAW,cAAc;AAClE,YAAI,MAAM,OAAO;AACjB,YAAI,YAAY,OAAO,QAAQ,GAAG,kBAAkB;AACpD,qBAAa,IAAI,CAAC,aAAa,IAAI,CAAC;AACpC,yBAAiB,QAAQ,aAAa,IAAI,CAAC;AAAA,MAC7C;AAEA,UAAI,aAAa,SAAU,QAAQ,WAAW,cAAc;AAC1D,eAAO,WAAW,mBAAmB,WAAY;AAC/C,6BAAmB,QAAQ,WAAW,YAAY;AAAA,QACpD,CAAC;AAAA,MACH;AAEA,UAAI,qBAAqB,SAAU,QAAQ;AACzC,eAAO,OAAO,SAAS,8BAA8B,OAAO,SAAS;AAAA,MACvE;AAEA,UAAI,QAAQ,SAAU,QAAQ,WAAW,cAAc;AACrD,eAAO,GAAG,sCAAsC,SAAU,GAAG;AAC3D,cAAI,aAAa,IAAI,GAAG;AACtB,mBAAO,IAAI,YAAY,OAAO,QAAQ,GAAG,oBAAoB,EAAE,SAAS,qBAAqB;AAAA,UAC/F;AAAA,QACF,CAAC;AACD,eAAO,GAAG,QAAQ,WAAY;AAC5B,cAAI,mBAAmB,MAAM,GAAG;AAC9B,+BAAmB,QAAQ,WAAW,YAAY;AAAA,UACpD;AAAA,QACF,CAAC;AAAA,MACH;AAEA,UAAI,oBAAoB,SAAU,QAAQ,cAAc;AACtD,eAAO,SAAU,KAAK;AACpB,cAAI,UAAU,aAAa,IAAI,CAAC;AAChC,cAAI,sBAAsB,SAAU,GAAG;AACrC,mBAAO,IAAI,UAAU,EAAE,KAAK;AAAA,UAC9B;AACA,iBAAO,GAAG,gBAAgB,mBAAmB;AAC7C,iBAAO,WAAY;AACjB,mBAAO,OAAO,IAAI,gBAAgB,mBAAmB;AAAA,UACvD;AAAA,QACF;AAAA,MACF;AACA,UAAI,WAAW,SAAU,QAAQ,cAAc;AAC7C,YAAI,WAAW,WAAY;AACzB,iBAAO,OAAO,YAAY,iBAAiB;AAAA,QAC7C;AACA,eAAO,GAAG,SAAS,gBAAgB,gBAAgB;AAAA,UACjD,MAAM;AAAA,UACN,SAAS;AAAA,UACT;AAAA,UACA,SAAS,kBAAkB,QAAQ,YAAY;AAAA,QACjD,CAAC;AACD,eAAO,GAAG,SAAS,kBAAkB,gBAAgB;AAAA,UACnD,MAAM;AAAA,UACN,MAAM;AAAA,UACN;AAAA,UACA,SAAS,kBAAkB,QAAQ,YAAY;AAAA,QACjD,CAAC;AAAA,MACH;AAEA,wBAAmB;AACjB,eAAO,IAAI,gBAAgB,SAAU,QAAQ,WAAW;AACtD,cAAI,eAAe,KAAK,KAAK;AAC7B,qBAAW,QAAQ,WAAW,YAAY;AAC1C,mBAAS,QAAQ,YAAY;AAC7B,gBAAM,QAAQ,WAAW,YAAY;AAAA,QACvC,CAAC;AAAA,MACH;AAEA,aAAO;AAAA,IAEX,GAAE;AAAA;AAAA;;;ACtGF;AAAA;AAAA;AAMA;AAAA;AAAA;;;ACNA;AAAA,IAAO,uCAAQ;",
  "names": []
}
