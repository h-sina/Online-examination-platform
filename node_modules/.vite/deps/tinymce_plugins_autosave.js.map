{
  "version": 3,
  "sources": ["../../tinymce/plugins/autosave/plugin.js", "../../tinymce/plugins/autosave/index.js", "dep:tinymce_plugins_autosave"],
  "sourcesContent": ["/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.10.3 (2022-02-09)\n */\n(function () {\n    'use strict';\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var eq = function (t) {\n      return function (a) {\n        return t === a;\n      };\n    };\n    var isUndefined = eq(undefined);\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.LocalStorage');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var fireRestoreDraft = function (editor) {\n      return editor.fire('RestoreDraft');\n    };\n    var fireStoreDraft = function (editor) {\n      return editor.fire('StoreDraft');\n    };\n    var fireRemoveDraft = function (editor) {\n      return editor.fire('RemoveDraft');\n    };\n\n    var parse = function (timeString, defaultTime) {\n      var multiples = {\n        s: 1000,\n        m: 60000\n      };\n      var toParse = timeString || defaultTime;\n      var parsedTime = /^(\\d+)([ms]?)$/.exec('' + toParse);\n      return (parsedTime[2] ? multiples[parsedTime[2]] : 1) * parseInt(toParse, 10);\n    };\n\n    var shouldAskBeforeUnload = function (editor) {\n      return editor.getParam('autosave_ask_before_unload', true);\n    };\n    var getAutoSavePrefix = function (editor) {\n      var location = document.location;\n      return editor.getParam('autosave_prefix', 'tinymce-autosave-{path}{query}{hash}-{id}-').replace(/{path}/g, location.pathname).replace(/{query}/g, location.search).replace(/{hash}/g, location.hash).replace(/{id}/g, editor.id);\n    };\n    var shouldRestoreWhenEmpty = function (editor) {\n      return editor.getParam('autosave_restore_when_empty', false);\n    };\n    var getAutoSaveInterval = function (editor) {\n      return parse(editor.getParam('autosave_interval'), '30s');\n    };\n    var getAutoSaveRetention = function (editor) {\n      return parse(editor.getParam('autosave_retention'), '20m');\n    };\n\n    var isEmpty = function (editor, html) {\n      if (isUndefined(html)) {\n        return editor.dom.isEmpty(editor.getBody());\n      } else {\n        var trimmedHtml = global$1.trim(html);\n        if (trimmedHtml === '') {\n          return true;\n        } else {\n          var fragment = new DOMParser().parseFromString(trimmedHtml, 'text/html');\n          return editor.dom.isEmpty(fragment);\n        }\n      }\n    };\n    var hasDraft = function (editor) {\n      var time = parseInt(global$2.getItem(getAutoSavePrefix(editor) + 'time'), 10) || 0;\n      if (new Date().getTime() - time > getAutoSaveRetention(editor)) {\n        removeDraft(editor, false);\n        return false;\n      }\n      return true;\n    };\n    var removeDraft = function (editor, fire) {\n      var prefix = getAutoSavePrefix(editor);\n      global$2.removeItem(prefix + 'draft');\n      global$2.removeItem(prefix + 'time');\n      if (fire !== false) {\n        fireRemoveDraft(editor);\n      }\n    };\n    var storeDraft = function (editor) {\n      var prefix = getAutoSavePrefix(editor);\n      if (!isEmpty(editor) && editor.isDirty()) {\n        global$2.setItem(prefix + 'draft', editor.getContent({\n          format: 'raw',\n          no_events: true\n        }));\n        global$2.setItem(prefix + 'time', new Date().getTime().toString());\n        fireStoreDraft(editor);\n      }\n    };\n    var restoreDraft = function (editor) {\n      var prefix = getAutoSavePrefix(editor);\n      if (hasDraft(editor)) {\n        editor.setContent(global$2.getItem(prefix + 'draft'), { format: 'raw' });\n        fireRestoreDraft(editor);\n      }\n    };\n    var startStoreDraft = function (editor) {\n      var interval = getAutoSaveInterval(editor);\n      global$3.setEditorInterval(editor, function () {\n        storeDraft(editor);\n      }, interval);\n    };\n    var restoreLastDraft = function (editor) {\n      editor.undoManager.transact(function () {\n        restoreDraft(editor);\n        removeDraft(editor);\n      });\n      editor.focus();\n    };\n\n    var get = function (editor) {\n      return {\n        hasDraft: function () {\n          return hasDraft(editor);\n        },\n        storeDraft: function () {\n          return storeDraft(editor);\n        },\n        restoreDraft: function () {\n          return restoreDraft(editor);\n        },\n        removeDraft: function (fire) {\n          return removeDraft(editor, fire);\n        },\n        isEmpty: function (html) {\n          return isEmpty(editor, html);\n        }\n      };\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.EditorManager');\n\n    var setup = function (editor) {\n      editor.editorManager.on('BeforeUnload', function (e) {\n        var msg;\n        global$1.each(global.get(), function (editor) {\n          if (editor.plugins.autosave) {\n            editor.plugins.autosave.storeDraft();\n          }\n          if (!msg && editor.isDirty() && shouldAskBeforeUnload(editor)) {\n            msg = editor.translate('You have unsaved changes are you sure you want to navigate away?');\n          }\n        });\n        if (msg) {\n          e.preventDefault();\n          e.returnValue = msg;\n        }\n      });\n    };\n\n    var makeSetupHandler = function (editor) {\n      return function (api) {\n        api.setDisabled(!hasDraft(editor));\n        var editorEventCallback = function () {\n          return api.setDisabled(!hasDraft(editor));\n        };\n        editor.on('StoreDraft RestoreDraft RemoveDraft', editorEventCallback);\n        return function () {\n          return editor.off('StoreDraft RestoreDraft RemoveDraft', editorEventCallback);\n        };\n      };\n    };\n    var register = function (editor) {\n      startStoreDraft(editor);\n      editor.ui.registry.addButton('restoredraft', {\n        tooltip: 'Restore last draft',\n        icon: 'restore-draft',\n        onAction: function () {\n          restoreLastDraft(editor);\n        },\n        onSetup: makeSetupHandler(editor)\n      });\n      editor.ui.registry.addMenuItem('restoredraft', {\n        text: 'Restore last draft',\n        icon: 'restore-draft',\n        onAction: function () {\n          restoreLastDraft(editor);\n        },\n        onSetup: makeSetupHandler(editor)\n      });\n    };\n\n    function Plugin () {\n      global$4.add('autosave', function (editor) {\n        setup(editor);\n        register(editor);\n        editor.on('init', function () {\n          if (shouldRestoreWhenEmpty(editor) && editor.dom.isEmpty(editor.getBody())) {\n            restoreDraft(editor);\n          }\n        });\n        return get(editor);\n      });\n    }\n\n    Plugin();\n\n}());\n", "// Exports the \"autosave\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/autosave')\n//   ES2015:\n//     import 'tinymce/plugins/autosave'\nrequire('./plugin.js');", "export default require(\"./node_modules/tinymce/plugins/autosave/index.js\");"],
  "mappings": "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",
  "names": []
}
