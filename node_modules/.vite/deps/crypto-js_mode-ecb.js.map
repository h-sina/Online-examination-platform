{
  "version": 3,
  "sources": ["../../crypto-js/mode-ecb.js", "dep:crypto-js_mode-ecb"],
  "sourcesContent": [";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));", "export default require(\"./node_modules/crypto-js/mode-ecb.js\");"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAC,IAAC,UAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,gBAAmB,qBAAwB;AAAA,MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;AAAA,MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;AAAA,MACtB;AAAA,IACD,GAAE,SAAM,SAAU,UAAU;AAK3B,eAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAM,SAAS,IAAI,gBAAgB,OAAO;AAE9C,YAAI,YAAY,IAAI,OAAO;AAAA,UACvB,cAAc,SAAU,OAAO,QAAQ;AACnC,iBAAK,QAAQ,aAAa,OAAO,MAAM;AAAA,UAC3C;AAAA,QACJ,CAAC;AAED,YAAI,YAAY,IAAI,OAAO;AAAA,UACvB,cAAc,SAAU,OAAO,QAAQ;AACnC,iBAAK,QAAQ,aAAa,OAAO,MAAM;AAAA,UAC3C;AAAA,QACJ,CAAC;AAED,eAAO;AAAA,MACX,EAAE;AAGF,aAAO,SAAS,KAAK;AAAA,IAEtB,CAAC;AAAA;AAAA;;;ACvCD;AAAA,IAAO,6BAAQ;",
  "names": []
}
